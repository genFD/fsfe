[00:00:00]
>> Jem Young: How does the Internet work? Internet runs over TCPIP. Which is a protocol that everybody agrees on. And on that packets. The packets are the space you the information that everybody knows how to communicate with. And they know how to transfer data. They know how to send data.

[00:00:18]
There's different types. There's the ICMP packets. which is the DIFFTEMP protocol, just kind of a checks, if you will. And it all runs on the series of trusts. And trust means that if I send you this packet. I guarantee you're gonna hand it off to the next person.

[00:00:34]
And we know that if we type in a domain into the browser, that gets resolved by the name servers using the DNS system. And that resolves into a server somewhere in the server. We'll get to that part. For the rest of the course. But the server is what handles that data.

[00:00:49]
Not bad right, we all understand how the internet works. Now, if you want a bit of politics. People talk about net neutrality and what exactly it is. It's this trust system that if I send a packet of data to, I don't know, Sri Lanka I know that I will probably get there because that's just the way the internet works.

[00:01:09]
We all trust each other. We just keep handing off that data. Net neutrality means that ISP can say like, hey, you're sending a text to Sri Lanka, actually, you know what I wanna do, I want to tax every bit of data that comes into this particular area, because you know what, I can do that So rather than this trust system, Just saying, actually, I'm gonna start charging you data depending on where it's going.

[00:01:28]
If you pay me a little bit more money. I'll make sure your data gets there a little bit faster. And that's the debate between net neutrality. Should the internet providers be just these dumb pipes that if I send a letter it just gets there? Or should they start prioritizing traffic based on how much someone pays me.

[00:01:42]
Again, I didn't take a side in this debate I was explaining what the argument about net neutrality is, now you know. And now you know how the Internet works. So where I said the full-stack is good because you work on the back-end a lot it doesn't change. This is the pythonclock.org counter.

[00:01:57]
Python 3 came out over ten years ago. There are still people using Python 2, in fact even at Netflix, I got an email recently, hey we're retiring Python 2, finally. That was 11 years ago when the new version of Python came out. That's how slowly things move on the back end.

[00:02:14]
So if you want the slower life, maybe full stack might your bag. Just throwing that out there, I'm not throwing shade on people that do Python.

